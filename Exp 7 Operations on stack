#include <stdio.h>
#include <stdlib.h>
#define Max 5

void push();
void pop();
void display();

int S[Max];
int top = -1;

int main(){
    int choice;
         printf("\nMENU :-");
        printf("\n1.Push");
        printf("\n2.Pop");
        printf("\n3.Display");
        printf("\n4.Exit");
        do{
        printf("\nEnter your choice:");
        scanf("%d",&choice);

switch(choice){
            case 1:push();break;
            case 2:pop();break;
            case 3:display();break;
            case 4:exit(0);
            default:printf("Invalid choice!");
}
}while(choice!=4);
return 0;
}

void push(){
    int element;
    if (top ==Max-1){
        printf("Overflow");
    }
    else{
        printf("Enter value");
        scanf("%d",&element);
        top=top+1;
        S[top]=element;
        
    }
}
    void pop(){
        int item;
        if (top==-1){
            printf("Underflow");
        }
        else{
            item = S[top];
            top--;
            printf("The deleted element is %d",item );
        }
    
}

void display(){
    if (top==-1){
            printf("Stack Empty");
        }
        else{
    printf("Stack elements are:");
    for(int i=0;i<=top;i++){  //max is capacity
        printf("\t %d",S[i]);
}
}
}
Nita Dongre

# include <stdio.h>
# include <stdlib.h>
# define size 5
void push();
void pop();
void display();
int stack[size];
int top=-1;

int main()
{
    int ch;
    
    printf("1.PUSH\n2.POP\n3.Display\n4.Exit\n");
     do{
         printf("\nEnter your choice");
         scanf("%d",&ch);
         switch(ch)
         {
             case 1: push();
             break;
             case 2: pop();
             break;
             case 3: display();
             break;
             case 4: exit(0);
             break;
         }
         
     }while(ch!=4);
    return 0;
}

void push()
{
    int element;
    if(top==size-1)
    {
        printf("\n Stack is full........");
    }
    else
    {
        printf("\nEnter element to insert");
        scanf("%d",&element);
        top++;
        stack[top]=element;
    }
}

void pop()
{
    if(top==-1)
    {
        printf("\n Stack is empty........");
    }
    else
    {
        printf("\n Deleted element is=%d",stack[top]);
        top--;
    }
}

void display()
{
    if(top==-1)
    {
        printf("\n Stack is empty........");
    } 
    else
    {
         printf("\n Stack elements are\n");
        for(int i=0;i<=top;i++)
        {
             printf("\t %d",stack[i]);
        }
    }
}
