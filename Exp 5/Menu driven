#include <stdio.h>
#include <stdlib.h>

struct node{
    int data;
    struct node *next;
};

struct node *head = NULL;

void createlist();
void displaylist();
void insertatbeginning();
void insertatend();
void insertatposition();

int main(){
    int choice;
    while(1){
        printf("\nMENU :-");
        printf("\n1.Create");
        printf("\n2.Display");
        printf("\n3.Insert at beginning");
        printf("\n4.Insert at end");
        printf("\n5. Insert at position");
        printf("\n6.Exit");
        printf("\nEnter your choice:");
        scanf("%d",&choice);
        
        switch(choice){
            case 1:createlist();break;
            case 2:displaylist();break;
            case 3:insertatbeginning();break;
            case 4:insertatend();break;
            case 5:insertatposition();break;
            case 6:exit(0);
            default:printf("Invalid choice!");

        }
    }
return 0;
}
struct node *createnode(int element){
    struct node *temp;
    temp = (struct node*)malloc (sizeof(struct node));
    temp ->data = element;
    temp ->next = NULL;
    return temp;
    
}

void createlist(){
    int n ,element,i;
    printf("Enter size of list:");
    scanf("%d",&n);
    for(i=1;i<=n;i++){
    printf("Enter element no. %d : ",i);
    scanf("%d",&element);
    struct node *newnode = createnode(element);
    if (head==NULL) //empty
    head = newnode;
    else{
        struct node *temp = head;
        while(temp->next!=NULL) //iterate
        temp = temp->next;
        temp->next= newnode;
       }
    
    }
}
void displaylist(){
    if (head == NULL){
    printf("List is empty.");
    return;
    }
    
    struct node *temp = head; //initial value
    printf("List:");
    while(temp !=NULL){  //iterate
        printf("%d -> ",temp->data); //insert data
        temp = temp ->next; //icreament
    }
    printf("NULL\n"); //after last
    
    
}
void insertatbeginning(){
int element;
printf("Enter element:");
scanf("%d",&element);
struct node *newnode = createnode(element);
 newnode ->next = head; //link newnode to current first node
 head = newnode; //newnodes address in head
 }
 
 void insertatend(){
     int element;
     printf("Enter element:");
     scanf("%d",&element);
     struct node *newnode = createnode(element);
     if (head==NULL){ //list is empty
     head = newnode;
     return;
     }
     struct node *temp = head; //create pointer that moves
     while(temp->next != NULL) //iterate
         temp = temp->next; //increament
         temp->next = newnode;

     }
     
void insertatposition(){
    int element,pos;
     printf("Enter element:");
     scanf("%d",&element);
     printf("Enter position you want to enter at:");
     scanf("%d",pos);
     struct node *newnode = createnode(element);
     if(pos==1){
         newnode ->next = head; //link newnode to current first node
         head = newnode; //newnodes address in head
         return;
     }
     struct Node *temp = head;
    

 
